{% extends 'base.html.twig' %}

{% block title %}Catalog{% endblock %}

{% block main %}

    <div class="sidebar-container">
        <div id="sidebar" class="sidebar-filter">
            <p class="h4 text-light text-center">Advanced Search</p>



            <div class="input-group">
                <label class="input-group-text" for=""><i class="bi bi-funnel"></i></label>
                <select class="form-select" aria-label="Filter select">
                    <option selected><i class="bi bi-funnel"></i> Filter</option>
                    <option value="1">All</option>
                    <option value="2">Active</option>
                    <option value="3">Inactive</option>
                </select>
            </div>


            {{ form_start(filtersForm) }}

            <p class="h4 text-light">Sort</p>

            <div id="alphabetical-container" class="container ">


                {% for child in filtersForm.alphabetical %}

                    {{ form_widget(child) }}
                    {{ form_label(child)}}

                {% endfor %}
            </div>

            <p class="h4 text-light">Release date</p>

            <div>
                {{ form_widget(filtersForm.minDate) }}
                {{ form_widget(filtersForm.maxDate) }}
            </div>

            <p class="h4 text-light">Duration</p>

            <div>
                {{ form_widget(filtersForm.maxTime) }}
            </div>


            <div class="mt-2 d-flex align-content-center justify-content-center">
                {{ form_widget(filtersForm.search) }}
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                <label class="form-check-label" for="flexSwitchCheckDefault">Default switch checkbox input</label>
            </div>

            {{ form_end(filtersForm) }}






        </div>

        <div class="sidebar-burger-container">
            <div id="burger-btn" class="sidebar-burger-btn">
                <span class="sidebar-burger-line sidebar-lines-close"></span>
                <span class="sidebar-burger-line sidebar-lines-close"></span>
                <span class="sidebar-burger-line sidebar-lines-close"></span>
            </div>
        </div>


    </div>

    <div class="container w-50 pt-3 ">

        {{ form_start(queryForm) }}
        <div class="input-group mb-3 row search-bar">
            {{ form_widget(queryForm.query) }}
            {{ form_widget(queryForm.search) }}
        </div>
        {{ form_end(queryForm) }}

    </div>


    <div class="container">
        <div id="catalaog-content" class="container pb-5 pt-5 position-relative">
            <div class="row">
                {% for card in catalog %}
                    {{ component('card', {
                        id: card.id,
                        title: card.title,
                        posterPath: card.posterPath,
                        pathName: card.pathName,
                        type: card.type
                    }) }}
                {% endfor %}
            </div>
        </div>

    </div>



    <div class="bottom-buttons">
        <a href="{{ path('app_catalog_index', {page: currentPage - 1}) }}" class="previous round">&#8249;</a>
        <a href="{{ path('app_catalog_index', {page: currentPage + 1}) }}" class="next round">&#8250;</a>
    </div>

    <script>

        let sidebar = document.getElementById("sidebar");
        let main = document.getElementById("main");
        let burgerLines = document.getElementsByClassName("sidebar-burger-line");
        let burgerBtn = document.getElementById("burger-btn");
        let isOpenSideBar = false;
        let alphabeticalContainer = document.getElementById("alphabetical-container");
        let checkedBox = document.querySelector('input[name="filters[alphabetical]"]:checked');

        if(checkedBox){
            let label = checkedBox.nextElementSibling;
            label.style.backgroundColor= '#8B1489';
            checkedBox.style.backgroundColor = '#8B1489';
        }

        console.log(checkedBox);

        alphabeticalContainer.childNodes.forEach((node)=>{

            if(node.tagName === 'LABEL'){
                node.addEventListener('click', ()=>{
                    console.log('click');
                    resetRadioButtons();
                    node.style.backgroundColor = '#8B1489';
                })
                node.classList.add('btn');
                node.classList.add('btn-secondary');
            }

        })


        burgerBtn.addEventListener('click',()=>{
            if(isOpenSideBar){
                burgerBtn.style.flexDirection = 'row'
                sidebar.style.display = 'block';
                for(let item of burgerLines){
                    item.classList.remove('sidebar-lines-close')
                    item.classList.add('sidebar-lines-open')

                }
                isOpenSideBar = !isOpenSideBar
            }
            else{
                burgerBtn.style.flexDirection = 'column'
                sidebar.style.display = 'none'
                for(let item of burgerLines){
                    item.classList.remove('sidebar-lines-open')
                    item.classList.add('sidebar-lines-close');
                }
                isOpenSideBar = !isOpenSideBar
            }


        })

        function resetRadioButtons(){
            alphabeticalContainer.childNodes.forEach((node)=>{
                if(node.tagName === 'LABEL'){
                    node.style.backgroundColor = '#202529';
                }


            })
        }
        





    </script>

{% endblock %}


